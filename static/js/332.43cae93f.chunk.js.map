{"version":3,"file":"static/js/332.43cae93f.chunk.js","mappings":"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","sources":["components/Header/Header.tsx","components/Footer/Footer.tsx","components/Alert/Alert.tsx","models/answers.model.ts","components/QuizForm/QuizForm.tsx","components/QuizSummary/QuizSummary.tsx","components/Quiz/Quiz.tsx","pages/home.tsx","pages/root.tsx"],"sourcesContent":["import React from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom'\n\nconst Header: React.FC = () => {\n  const navigate = useNavigate()\n  const location = useLocation()\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand-lg bg-body-tertiary\">\n        <div className=\"container-fluid\">\n          <h1>\n            <span className=\"trivial\">Trivial</span> Quiz\n          </h1>\n          {location.pathname !== '/' && (\n            <button\n              className=\"nav-item btn btn-primary\"\n              onClick={() => {\n                navigate('/')\n              }}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                fill=\"currentColor\"\n                className=\"bi bi-house\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path d=\"M8.707 1.5a1 1 0 0 0-1.414 0L.646 8.146a.5.5 0 0 0 .708.708L2 8.207V13.5A1.5 1.5 0 0 0 3.5 15h9a1.5 1.5 0 0 0 1.5-1.5V8.207l.646.647a.5.5 0 0 0 .708-.708L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.707 1.5ZM13 7.207V13.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5V7.207l5-5 5 5Z\" />\n              </svg>\n            </button>\n          )}\n        </div>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nconst Footer: React.FC = () => {\n  return (\n    <footer>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <p>\n              <span className=\"trivial\">Trivial</span> Quiz Â© 2023\n            </p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\ninterface AlertProps {\n  message: string\n  setAlert: React.Dispatch<React.SetStateAction<boolean>>\n  handleHardSubmit: (e: React.FormEvent) => void\n}\n\nconst Alert: React.FC<AlertProps> = (props) => {\n  return (\n    <div className=\"myAlert\">\n      <div className=\"alert alert-danger\" role=\"alert\">\n        <h4>{props.message}</h4>\n        <button\n          className=\"btn btn-dark\"\n          onClick={() => {\n            props.setAlert(false)\n          }}\n        >\n          I want to select all answers\n        </button>\n        <button\n          className=\"btn btn-outline-light text-dark\"\n          onClick={props.handleHardSubmit}\n        >\n          I understand, submit\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Alert\n","export const answers: string[] = ['', '', '', '', '', '', '', '', '', '']\n","import React from 'react'\nimport type Question from '~/types/question.type'\nimport { answers } from '~/models/answers.model'\n\ninterface QuizFormProps {\n  handleSubmit: (e: React.FormEvent) => void\n  quiz: Question[]\n  setAnswers: React.Dispatch<React.SetStateAction<string[]>>\n}\n\nconst QuizForm: React.FC<QuizFormProps> = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} className=\"card p-3\">\n      <div>\n        {props.quiz.map((question: Question, index: number) => (\n          <fieldset\n            key={index}\n            id={index.toString()}\n            onChange={(e) => {\n              const target = e.target as HTMLInputElement\n              const newAnswers = answers\n              newAnswers[index] = target.value\n              props.setAnswers(newAnswers)\n            }}\n            className=\"card mb-3 question\"\n          >\n            <h4 className=\"card-header\">{question.question}</h4>\n            <div className=\"card-body\">\n              {question.answers.map((answer: string, index: number) => (\n                <div key={answer} className=\"form-check my-1\">\n                  <label\n                    htmlFor={`answer${index}${question.question}`}\n                    className=\"form-label py-1\"\n                  >\n                    <input\n                      id={`answer${index}${question.question}`}\n                      type=\"radio\"\n                      value={answer}\n                      name={question.question}\n                      className=\"form-check-input\"\n                    />\n                    <span className=\"px-2\">{answer}</span>\n                  </label>\n                </div>\n              ))}\n            </div>\n          </fieldset>\n        ))}\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n    </form>\n  )\n}\n\nexport default QuizForm\n","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport type Question from '~/types/question.type'\n\ninterface QuizSummaryProps {\n  quiz: Question[]\n  answers: string[]\n  score: number\n}\n\nconst QuizSummary: React.FC<QuizSummaryProps> = (props) => {\n  const navigate = useNavigate()\n  const [showAnswers, setShowAnswers] = useState(false)\n\n  return (\n    <div className=\"card p-3\">\n      <div className=\"score mb-2\">\n        <h2>Quiz finished</h2>\n        <h4 className=\"mt-2\">\n          <span className=\"badge rounded-pill text-bg-light px-3\">\n            Score: {props.score}/10\n          </span>\n        </h4>\n      </div>\n      <button\n        className=\"btn btn-outline-primary\"\n        onClick={() => {\n          setShowAnswers(!showAnswers)\n        }}\n      >\n        {!showAnswers ? 'Show answers' : 'Hide answers'}\n      </button>\n      {showAnswers && (\n        <div>\n          {props.quiz.map((qeustion: Question, index: number) => (\n            <div key={index} className=\"card mt-3 question\">\n              <h4 className=\"card-header\">{qeustion.question}</h4>\n              {props.answers[index] !== qeustion.correct_answer && (\n                <div className=\"card-body\">\n                  <p className=\"not-correct\">\n                    Your answer: {props.answers[index]}\n                  </p>\n\n                  <p className=\"answer\">\n                    Correct answer: {qeustion.correct_answer}\n                  </p>\n                  <h6 className=\"points p0\">point(s): 0/1</h6>\n                </div>\n              )}\n              {props.answers[index] === qeustion.correct_answer && (\n                <div className=\"card-body\">\n                  <p className=\"correct\">Your answer: {props.answers[index]}</p>\n                  <h6 className=\"points p1\">point(s): 1/1</h6>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n      <button\n        className=\"btn btn-primary mt-3\"\n        onClick={() => {\n          navigate('/quiz')\n        }}\n      >\n        Start new quiz!\n      </button>\n    </div>\n  )\n}\n\nexport default QuizSummary\n","import React, { useState } from 'react'\nimport type Question from '~/types/question.type'\nimport Alert from '../Alert/Alert'\nimport { answers as emptyAnswers } from '~/models/answers.model'\nimport QuizForm from '../QuizForm/QuizForm'\nimport QuizSummary from '../QuizSummary/QuizSummary'\n\ninterface QuizProps {\n  quiz: Question[]\n}\n\nconst Quiz: React.FC<QuizProps> = (props) => {\n  const [answers, setAnswers] = useState<string[]>(emptyAnswers)\n  const [submitted, setSubmitted] = useState(false)\n  const [score, setScore] = useState(0)\n  const [alert, setAlert] = useState(false)\n\n  const correctAnswers = props.quiz.map((question: Question) => {\n    return question.correct_answer\n  })\n\n  const handleSubmit = (e: React.FormEvent): void => {\n    e.preventDefault()\n    if (answers.includes('')) {\n      setAlert(true)\n    } else {\n      setSubmitted(true)\n      checkAnswers()\n    }\n  }\n\n  const handleHardSubmit = (e: React.FormEvent): void => {\n    e.preventDefault()\n    setAlert(false)\n    setSubmitted(true)\n    checkAnswers()\n  }\n\n  const checkAnswers = (): void => {\n    let score = 0\n    answers.forEach((answer, index) => {\n      if (answer === correctAnswers[index]) {\n        score++\n      }\n    })\n    setScore(score)\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      {alert && (\n        <Alert\n          message=\"You didn't select all answers!\"\n          setAlert={setAlert}\n          handleHardSubmit={handleHardSubmit}\n        />\n      )}\n      <div className=\"row\">\n        <div className=\"col-12\">\n          {!submitted ? (\n            <QuizForm\n              handleSubmit={handleSubmit}\n              quiz={props.quiz}\n              setAnswers={setAnswers}\n            />\n          ) : (\n            <QuizSummary quiz={props.quiz} answers={answers} score={score} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Quiz\n","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport RootPage from './root'\n\nconst HomePage: React.FC = (props) => {\n  const navigate = useNavigate()\n  return (\n    <RootPage header=\"home\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <button\n              className=\"btn btn-home\"\n              onClick={() => {\n                navigate('/quiz')\n              }}\n            >\n              Start a quiz!\n            </button>\n          </div>\n        </div>\n      </div>\n    </RootPage>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\nimport { Header, Footer } from '~/components'\n\ninterface RootPageProps {\n  header: string\n  children: React.ReactNode\n}\n\nconst RootPage: React.FC<RootPageProps> = (props) => {\n  return (\n    <div className=\"body\">\n      <Header />\n      <main>{props.children}</main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default RootPage\n"],"names":["navigate","useNavigate","location","useLocation","className","pathname","onClick","xmlns","width","height","fill","viewBox","d","props","role","message","setAlert","handleHardSubmit","answers","onSubmit","handleSubmit","quiz","map","question","index","id","toString","onChange","e","target","newAnswers","value","setAnswers","answer","htmlFor","type","name","useState","showAnswers","setShowAnswers","score","qeustion","correct_answer","emptyAnswers","submitted","setSubmitted","setScore","alert","correctAnswers","checkAnswers","forEach","preventDefault","includes","header","children"],"sourceRoot":""}